useth <tupiheader.th>
usetp <tupicode.tp>

ref byte pularLinha "\n\0"
ref i8 msg1 'myInt is ', 0
ref i8 msgLoop "myInt in loop is \0"
ref i8 msg6 "myInts is %d %d %d %d %d\n\0"
ref i8 appName "python\0" 
i64 myInt 120
myStruct myStructTest {8, 8, 16, 16}
Unginha myStructUnginha {8, 8, 16, 16}
CUnginha myStructCUnginha {8, 8, 8, 16}

struct Unginha
{
	i8 myByte1 ?
	i64 myLong1 ?
	i8 myByte2 ?
	i64 myLong2 ?
}

cstruct CUnginha
{
	i8 myByte1 ?
	i64 myLong1 ?
	i8 myByte2 ?
	i64 myLong2 ?
}

typedef i32 int32_1
typedef dword int32_2

fn main(i32 argc, iptr argv) 
{
	byte myBool = 1;
	byte myByteByte = 2;
	int32_1 unini = 3;
	i64 myLongVar1 = 10;
	i32 myIntVar1 = 10;
	i8 myShortVar1 = 11;
	i8 myShortVar2 = 12;
	i64 myLongVar2 = 2;
	i64 myLongLoop = 2;
	iptr myPointer;
	iptr myPointer2;
	myStruct myStructVar;
	
	myPointer = &myLongVar2
	myPointer2 = &myLongLoop
	[myPointer]++;
	$iptr myPointer3;
	[myPointer] += sum64(1, 2);
	[myPointer] -= 2;
	myLongLoop += [myPointer]
	[myPointer2] += [myPointer]
	consoleWriteInt([myPointer])
	consoleWriteStr(pularLinha)
	startProcess(NULL,appName,SW_SHOW,TRUE);
	if(myBool){
		$i64 myIfVar = 10;
		$local i64 myIfVar2 = 10;
		myLongVar1 = sum64(10, 11)
		consoleWriteInt(myLongVar1)
		consoleWriteStr(pularLinha)
		myIntVar1 = sum32(TRUE, FALSE)
		consoleWriteInt(myIntVar1)
		consoleWriteStr(pularLinha)
	}
	elseif(myByteByte == 0){
		myLongVar1 = sum64(20, 22)
		consoleWriteInt(myLongVar1)
		consoleWriteStr(pularLinha)
		myIntVar1 = sum32(TRUE, FALSE)
		consoleWriteInt(myIntVar1)
		consoleWriteStr(pularLinha)
	}
	elseif(myByteByte == 1){
		myLongVar1 = sum64(40, 44)
		consoleWriteInt(myLongVar1)
		consoleWriteStr(pularLinha)
		myIntVar1 = sum32(TRUE, FALSE)
		consoleWriteInt(myIntVar1)
		consoleWriteStr(pularLinha)
	}
	else{
		print(appName)
	}	

	consoleWriteInt(myStructCUnginha.myLong1)
	consoleWriteStr(pularLinha)
	while(myLongLoop >= 3)
	{
		myLongLoop--;
		consoleWriteStr(msg1)
		consoleWriteInt(myLongLoop)
		consoleWriteStr(pularLinha)
	}
	loop
	{
		loop
		{
			consoleWriteStr(msgLoop)
			consoleWriteInt(myLongLoop)
			consoleWriteStr(pularLinha)
			break;
		}
		break;
		consoleWriteStr(msgLoop)
		consoleWriteInt(myLongLoop)
		consoleWriteStr(pularLinha)
		break;
	}	
	return 0;
}

fn print_i64(i64 integer)
{
	consoleWriteStr(msg1)
	consoleWriteInt(integer)
	consoleWriteStr(pularLinha)
}

fn sum64(i64 a, i64 b){
	i64 r = 0;
	
	r = a
	r += b
	return r
}

fn sum32(i32 a, i32 b){
	i32 r = 0;
	
	r = a
	r += b
	return r
}